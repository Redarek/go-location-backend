package location

// second_method consts

// Порог мощности, ниже которого ячейки считаются "невидимым"
const RSII_CUTOFF float64 = -85

// Значение мощности для "невидимых" ячеек
const RSSI_INVISIBLE float64 = -100

const DISTANCE_INVISIBLE = -1

// Поправочный коэффициент для диапазона 2,4 ГГц в дБ: добавляет поправку к мощности каждой ячейки
const CORRECTION_COEFFICIENT_24 float64 = 0

// Поправочный коэффициент для диапазона 5 ГГц в дБ: добавляет поправку к мощности каждой ячейки
const CORRECTION_COEFFICIENT_5 float64 = 0

// Поправочный коэффициент для диапазона 6 ГГц в дБ: добавляет поправку к мощности каждой ячейки
const CORRECTION_COEFFICIENT_6 float64 = 0

// Включение / выключение расчёта стен
const CALCULATE_WALLS = true

// Вкл / Выкл сложной математики расчёта стен
const HARD_MATH_FOR_WALLS = false

// Частота для 2.4 ГГц диапазона (по умолчанию 2437 МГц – 6 канал)
const FREQUENCY24 int = 2437

// Коэффициент распространения сигнала для 2.4 ГГц
const PENETRATION_FACTOR24 float64 = 1

// Коэффициент затухания для 2.4 ГГц
const ATTENUATION_FACTOR24 float64 = 2.7

// Частота для 5 ГГц диапазона
const FREQUENCY5 int = 5250 // 48 - 52 channel

// Коэффициент распространения сигнала для 5 ГГц
const PENETRATION_FACTOR5 float64 = 1 // был 6

// Коэффициент затухания для 5 ГГц
const ATTENUATION_FACTOR5 float64 = 2.5 // 3

// Частота для 6 ГГц диапазона
const FREQUENCY6 int = 5250 // пересчитать

// Коэффициент распространения сигнала для 6 ГГц
const PENETRATION_FACTOR6 float64 = 1 // пересчитать

// Коэффициент затухания для 6 ГГц
const ATTENUATION_FACTOR6 float64 = 2 // пересчитать

//////////////
// xy_finder consts

// Максимальная допустимая погрешность в дБ (возможно, переведу в метры, но это не точно).
// Выше 15 пока что желательно не ставить, возможно, в будущем это число будет еще меньше.
const MAX_ACCURACY float64 = 5

// Устаревшая
const ACCURACY_BIG_STEP float64 = 0.5

// Устаревшая
const ACCURACY_SMALL_STEP float64 = 0.1

// Минимальная допустимая погрешность в дБ.
// Слишком низкое значение может отсечь правильные точки. Оптимальное значение ещё на стадии определения.
const MIN_ACCURACY float64 = 1

// Количество выводимых точек.Чем выше, тем раньше и с более высокой погрешностью выдаст результат.
// Устаревшее
const RESULT_LENGTH_BIG int = 25
const RESULT_LENGTH_SMALL int = 15
const ONE_SENSOR_RESULT_LENGTH float64 = 1.5

// Промежуток времени в секундах, в течение которого информация об обнаруженном устройстве считается актуальной.
// Отсекает устройства, которые были обнаружены давно.
const INFO_AGING_TIME int = 30

// Коэффициенты для дельты RSSI

const C_MIN float64 = 1
const C_MAX float64 = 5
const EIRP float64 = 18

////////////
// matrix_generator consts

// Размер буфера для разовой записи в БД. Чем выше это значение, тем больше памяти потребляет программа.
// Слишком низкое значение увеличивает количество обращений в БД и снижает время выполнения программы.
// Слишком высокое – возможны ошибки соединения с БД из - за таймаутов.
const BUFFER_MAX_LENGTH int = 10000

// Размер ячейки.Ниже 0.25 лучше не ставить.
//const CELL_SIZE_METER = 0.25;

// Добавочный размер карты в мерах.Позволяет рассчитывать территорию вне помещения.
//const AREA_INDENT_METER = 0;
